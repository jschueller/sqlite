cmake_minimum_required(VERSION 3.2)

project(sqlite3 VERSION 3.13.0 LANGUAGES C)

if(MSVC)
  set(CMAKE_DEBUG_POSTFIX "d")
endif()


  
add_library(sqlite3
  sqlite3.h
  sqlite3ext.h
  sqlite3.c
)

if(BUILD_SHARED_LIBS)
  target_compile_definitions(sqlite3
    PRIVATE
    WINDLL
    SQLITE_THREADSAFE=1
    SQLITE_ENABLE_UNLOCK_NOTIFY
    "SQLITE_API=_declspec(dllexport)"
    INTERFACE
    "SQLITE_API=_declspec(dllimport)"
  )
endif()

if(CMAKE_SYSTEM_NAME EQUAL "WindowsStore")
  target_compile_definitions(sqlite3
    PRIVATE
    SQLITE_OS_WINRT
  )
endif()

target_include_directories(
  sqlite3 PRIVATE
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
  INTERFACE
  $<INSTALL_INTERFACE:include>
)

include(CMakePackageConfigHelpers)
write_basic_package_version_file(
  ${CMAKE_CURRENT_BINARY_DIR}/sqlite3-config-version.cmake
  VERSION ${sqlite_VERSION}
  COMPATIBILITY AnyNewerVersion
)

install(TARGETS sqlite3 EXPORT sqlite3
  RUNTIME DESTINATION bin
  ARCHIVE DESTINATION lib
  LIBRARY DESTINATION lib
)


install(FILES
  ${CMAKE_CURRENT_SOURCE_DIR}/sqlite3.h
  ${CMAKE_CURRENT_SOURCE_DIR}/sqlite3ext.h
  DESTINATION include
)

install(EXPORT sqlite3
  FILE
    sqlite3.cmake
  NAMESPACE
    sqlite3::
  DESTINATION
    lib/cmake/sqlite3
)
install(
  FILES
    cmake/sqlite3-config.cmake
    ${CMAKE_CURRENT_BINARY_DIR}/sqlite3-config-version.cmake
  DESTINATION
    lib/cmake/sqlite3
)

if(MSVC AND BUILD_SHARED_LIBS)
  install(FILES
    $<TARGET_PDB_FILE:sqlite3>
    DESTINATION lib
  )
endif()

add_executable(sqlite shell.c)
target_link_libraries (sqlite sqlite3)
set_target_properties(sqlite PROPERTIES OUTPUT_NAME sqlite3)
include(FindThreads)
if (CMAKE_THREAD_LIBS_INIT)
  target_link_libraries(sqlite ${CMAKE_THREAD_LIBS_INIT})
endif ()
if (CMAKE_DL_LIBS)
  target_link_libraries(sqlite ${CMAKE_DL_LIBS})
endif ()
install (TARGETS sqlite DESTINATION bin)
